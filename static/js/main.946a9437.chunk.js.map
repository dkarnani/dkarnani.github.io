{"version":3,"sources":["components/Loading.js","components/NavBar.js","components/Footer.js","components/Hero.js","utils/contentData.js","components/Content.js","views/Home.js","components/Highlight.js","views/Profile.js","configs.js","views/ExternalApi.js","utils/history.js","components/Auth0Provider.js","utils/initFontAwesome.js","App.js","serviceWorker.js","auth0-provider-with-history.js","components/IsDevice.js","index.js","assets/loading.svg","assets/NewLogo.png"],"names":["Loading","className","src","loading","alt","NavBar","useAuth0","user","isLoading","isAuthenticated","getAccessTokenSilently","loginWithPopup","logout","Navbar","color","light","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","RouterNavLink","to","exact","activeClassName","Button","id","onClick","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","picture","width","DropdownMenu","DropdownItem","header","name","icon","returnTo","block","style","minHeight","Footer","Hero","logo","href","contentData","title","link","description","Content","Row","map","col","i","Col","key","md","Component","Home","SyntaxHighlighter","registerLanguage","json","Highlight","children","language","atomDark","withAuthenticationRequired","email","JSON","stringify","onRedirecting","configs","useState","showResult","apiMessage","error","file","values","score","state","setState","data","getIdTokenClaims","onFormSubmit","a","fileUpload","toast","claims","token","__raw","url","API_URL","formData","FormData","append","config","headers","post","responseData","console","log","Form","inline","FormGroup","Input","type","onChange","e","target","files","label","lang","data-browse","variant","createBrowserHistory","Auth0Context","createContext","library","add","faLink","faUser","faPowerOff","initFontAwesome","App","path","component","Profile","FileUpload","Boolean","window","location","hostname","match","Auth0ProviderWithHistory","history","useHistory","domain","DOMAIN","clientId","clientID","redirectUri","origin","onRedirectCallback","appState","push","pathname","IsDevice","navigator","ua","userAgent","info","Android","BlackBerry","IEMobile","iOS","OperaMini","any","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.946a9437.chunk.js","sourcesContent":["import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React, { Component, useState, useContext } from \"react\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"./Loading\";\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n\nconst NavBar = () => {\n/*   constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isAuthenticated:false\n    }\n  } */\n/*   const [isOpen, toggle] = useState(false); */\n  const { user, isLoading, getAccessTokenSilently, isAuthenticated, loginWithPopup, logout } = useAuth0();\n\n  if (isLoading) {\n    return <Loading />;\n  };\n\n  /* auth0 = useContext(Auth0Context); */\n\n/*   componentWillMount() {\n    this.state.isAuthenticated = this.auth0.isAuthenticated;\n    console.log(\"yesh?\");\n  } */\n\n/*   async login() {\n    await this.auth.loginWithRedirect({\n      redirect_uri: 'http://localhost:3000'\n    });\n    console.log(\"here\");\n    this.setState({...this.state, isAuthenticated: true});\n    this.isAuthenticated=true;\n    this.auth.getUser().then(myuser => {\n      this.setState({...this.state, user: myuser});\n      console.log(myuser);\n    });\n  }   */\n\n  return (\n    <div className=\"nav-container\">\n      <Navbar color=\"light\" light expand=\"md\">\n        <Container>\n          <NavbarBrand className=\"logo\" />\n          <NavbarToggler /* onClick={toggle(!isOpen)} */ />\n          <Collapse /* isOpen={isOpen} */ navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  tag={RouterNavLink}\n                  to=\"/\"\n                  exact\n                  activeClassName=\"router-link-exact-active\"\n                >\n                  Home\n                </NavLink>\n              </NavItem>\n              {isAuthenticated && (\n                <NavItem>\n                  <NavLink\n                    tag={RouterNavLink}\n                    to=\"/tester\"\n                    exact\n                    activeClassName=\"router-link-exact-active\"\n                  >\n                    Tester\n                  </NavLink>\n                </NavItem>\n              )}\n            </Nav>\n            <Nav className=\"d-none d-md-block\" navbar>\n              {!isAuthenticated && (\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={() => loginWithPopup()}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret id=\"profileDropDown\">\n                    <img\n                      src={user.picture}\n                      alt=\"Profile\"\n                      className=\"nav-user-profile rounded-circle\"\n                      width=\"50\"\n                    />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>{user.name}</DropdownItem>\n                    <DropdownItem\n                      tag={RouterNavLink}\n                      to=\"/profile\"\n                      className=\"dropdown-profile\"\n                      activeClassName=\"router-link-exact-active\"\n                    >\n                      <FontAwesomeIcon icon=\"user\" className=\"mr-3\" /> Profile\n                    </DropdownItem>\n                    <DropdownItem\n                      id=\"qsLogoutBtn\"\n                      onClick={() => logout({\n                        returnTo: \"https://dkarnani.github.io/\",\n                      })}\n                    >\n                      <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" /> Log\n                      out\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n            </Nav>\n            {!isAuthenticated && (\n              <Nav className=\"d-md-none\" navbar>\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    block\n                    onClick={() => loginWithPopup()}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              </Nav>\n            )}\n            {isAuthenticated && (\n              <Nav\n                className=\"d-md-none justify-content-between\"\n                navbar\n                style={{ minHeight: 170 }}\n              >\n                <NavItem>\n                  <span className=\"user-info\">\n                    <img\n                      src={user.picture}\n                      alt=\"Profile\"\n                      className=\"nav-user-profile d-inline-block rounded-circle mr-3\"\n                      width=\"50\"\n                    />\n                    <h6 className=\"d-inline-block\">{user.name}</h6>\n                  </span>\n                </NavItem>\n                <NavItem>\n                  <FontAwesomeIcon icon=\"user\" className=\"mr-3\" />\n                  <RouterNavLink\n                    to=\"/profile\"\n                    activeClassName=\"router-link-exact-active\"\n                  >\n                    Profile\n                  </RouterNavLink>\n                </NavItem>\n                <NavItem>\n                  <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" />\n                  <RouterNavLink\n                    to=\"#\"\n                    id=\"qsLogoutBtn\"\n                    onClick={() => logout({\n                      returnTo: \"https://dkarnani.github.io/\",\n                    })}\n                  >\n                    Log out\n                  </RouterNavLink>\n                </NavItem>\n              </Nav>\n            )}\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Footer = () => (\n  <footer className=\"bg-light p-3 text-center\">\n    <div className=\"logo\" />\n    <p>\n      Designed by Divij Karnani\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nimport logo from \"../assets/NewLogo.png\";\n\nconst Hero = () => (\n  <div className=\"text-center hero my-5\">\n    <img className=\"mb-3 app-logo\" src={logo} alt=\"React logo\" width=\"120\" />\n    <h1 className=\"mb-4\">React.js Sample Project</h1>\n\n    <p className=\"lead\">\n      This is a sample application that demonstrates an authentication flow for\n      an SPA, using <a href=\"https://reactjs.org\">React.js</a>\n    </p>\n  </div>\n);\n\nexport default Hero;\n","const contentData = [\n  {\n    title: \"Configure other identity providers\",\n    link: \"https://auth0.com/docs/connections\",\n    description:\n      \"Auth0 supports social providers as Facebook, Twitter, Instagram and 100+, Enterprise providers as Microsoft Office 365, Google Apps, Azure, and more. You can also use any OAuth2 Authorization Server.\"\n  },\n  {\n    title: \"Enable Multifactor Authentication\",\n    link: \"https://auth0.com/docs/multifactor-authentication\",\n    description:\n      \"Add an extra layer of security by enabling Multi-factor Authentication, requiring your users to provide more than one piece of identifying information. Push notifications, authenticator apps, SMS, and DUO Security are supported.\"\n  },\n  {\n    title: \"Anomaly Detection\",\n    link: \"https://auth0.com/docs/anomaly-detection\",\n    description:\n      \"Auth0 can detect anomalies and stop malicious attempts to access your application. Anomaly detection can alert you and your users of suspicious activity, as well as block further login attempts.\"\n  },\n  {\n    title: \"Learn About Rules\",\n    link: \"https://auth0.com/docs/rules\",\n    description:\n      \"Rules are JavaScript functions that execute when a user authenticates to your application. They run once the authentication process is complete, and you can use them to customize and extend Auth0's capabilities.\"\n  }\n];\n\nexport default contentData;\n","import React, { Component } from \"react\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport contentData from \"../utils/contentData\";\n\nclass Content extends Component {\n  render() {\n    return (\n      <div className=\"next-steps my-5\">\n        <h2 className=\"my-5 text-center\">What can I do next?</h2>\n        <Row className=\"d-flex justify-content-between\">\n          {contentData.map((col, i) => (\n            <Col key={i} md={5} className=\"mb-4\">\n              <h6 className=\"mb-3\">\n                <a href={col.link}>\n                  <FontAwesomeIcon icon=\"link\" className=\"mr-2\" />\n                  {col.title}\n                </a>\n              </h6>\n              <p>{col.description}</p>\n            </Col>\n          ))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Fragment } from \"react\";\n\nimport Hero from \"../components/Hero\";\nimport Content from \"../components/Content\";\n\nconst Home = () => (\n  <Fragment>\n    <Hero />\n    <hr />\n    <Content />\n  </Fragment>\n);\n\nexport default Home;\n","import React from \"react\";\r\nimport { PrismAsyncLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport json from \"react-syntax-highlighter/dist/esm/languages/prism/json\";\r\nimport atomDark from \"react-syntax-highlighter/dist/esm/styles/prism/atom-dark\";\r\n\r\nSyntaxHighlighter.registerLanguage(\"json\", json);\r\n\r\nconst Highlight = ({ children }) => (\r\n  <SyntaxHighlighter language=\"json\" style={atomDark}>\r\n    {children}\r\n  </SyntaxHighlighter>\r\n);\r\n\r\nexport default Highlight;\r\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\n\nimport Highlight from \"../components/Highlight\";\nimport Loading from \"../components/Loading\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\n\nexport const ProfileComponent = () => {\n  const { user } = useAuth0();\n\n  return (\n    <Container className=\"mb-5\">\n      <Row className=\"align-items-center profile-header mb-5 text-center text-md-left\">\n        <Col md={2}>\n          <img\n            src={user.picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </Col>\n        <Col md>\n          <h2>{user.name}</h2>\n          <p className=\"lead text-muted\">{user.email}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Highlight>{JSON.stringify(user, null, 2)}</Highlight>\n      </Row>\n    </Container>\n  );\n};\n\nexport default withAuthenticationRequired(ProfileComponent, {\n  onRedirecting: () => <Loading />,\n});\n","const configs = {\r\n    'API_URL' : 'https://www.node-express.com/uploader',\r\n    'DOMAIN' : 'aerovate.auth0.com',\r\n    'clientID' : 'E3vnWzy4O0gcrM1seDpU7r2glcHE44G4'\r\n}\r\nexport default configs;","import React, { useState } from 'react';\nimport { post } from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FormGroup, Input, Button, Form } from \"reactstrap\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"../components/Loading\";\nimport Highlight from \"../components/Highlight\";\nimport configs from \"../configs\";\n\nexport const FileUpload = () => {\n  const [state, setState] = useState({\n    showResult: false,\n    apiMessage: null,\n    error: null,\n    file: null,\n    values: null,\n    score: null\n  });\n\n  const apiUrl = \"http://35.174.208.247:5000\";\n  var data=null;\n  \n  const { getAccessTokenSilently, getIdTokenClaims } = useAuth0();\n\n  const handle = (e, fn) => {\n    e.preventDefault();\n    fn();\n  };\n\n  const onFormSubmit = async() => {\n    //e.preventDefault() // Stop form submit\n    const response = fileUpload(state.file);\n    toast(\"File submitted!\");\n  };\n\n  const onChange = (e) => {\n    setState({...state, file:e.target.files[0]})\n    toast(\"File Uploaded!\");\n  };\n\n  const fileUpload = async(file) => {\n    try {\n      const claims = await getIdTokenClaims();\n      const token = claims.__raw;\n      const url = configs.API_URL;\n      const formData = new FormData();\n      formData.append('file',file)\n      const config = {\n          headers: {\n            'Authorization': `Bearer ${token}`,  \n            'content-type': 'multipart/form-data'\n          }\n      }\n      const responseData = await post(url, formData, config)\n      data = responseData[\"data\"][\"data\"];\n      console.log(data);\n      setState({...state, values:data, score:responseData[\"data\"][\"score\"]});\n    } catch (error) {\n      \n    }\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <div className=\"mb-5\">\n        <h1 className='primary'>File Upload</h1>\n        <hr/>\n        <Form inline>\n          <FormGroup>\n            <Input \n            type=\"file\"\n            onChange={(e) => onChange(e)}\n            id=\"custom-file-translate-scss\" \n            label=\"Select a file\"\n            lang=\"en\"\n            data-browse=\"Button text\"\n            />\n            <Button onClick={(e) => onFormSubmit(e)} className=\"mdl-button mdl-js-button\" variant=\"outline-primary\">Upload</Button>\n          </FormGroup>\n        </Form>  \n        {state.score && (\n          <div className=\"mt-5\">\n            <h4 className=\"muted\">Your Score</h4>\n            <Highlight language=\"json\">\n              {JSON.stringify(state.score, null, 2)}\n            </Highlight>\n          </div>\n        )}\n        {state.values && (\n          <div className=\"mt-5\">\n            <h4 className=\"muted\">Values</h4>\n            <Highlight language=\"json\">\n              {JSON.stringify(state.values, null, 2)}\n            </Highlight>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default withAuthenticationRequired(FileUpload, {\n  onRedirecting: () => <Loading />,\n});\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React, { Component, createContext } from 'react';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\nimport App from \"../App\";\r\n\r\n// create the context\r\nexport const Auth0Context = createContext();\r\n\r\n// create a provider\r\nexport class Auth0Provider extends Component {\r\n    state = {\r\n        auth0Client: null,\r\n        isLoading: true,\r\n        isAuthenticated: false,\r\n        user: null\r\n    };\r\n    config = {\r\n        domain: 'aerovate.auth0.com',\r\n        client_id: 'E3vnWzy4O0gcrM1seDpU7r2glcHE44G4',\r\n        redirect_uri: window.location.origin\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.initializeAuth0();\r\n    }\r\n\r\n    // initialize the auth0 library\r\n    initializeAuth0 = async () => {\r\n        const auth0Client = await createAuth0Client(this.config);\r\n        this.setState({ auth0Client });\r\n    \r\n        if (window.location.search.includes('code=')) {\r\n          return this.handleRedirectCallback();\r\n        }\r\n    \r\n        const isAuthenticated = await auth0Client.isAuthenticated();\r\n        const user = isAuthenticated ? await auth0Client.getUser() : null;\r\n        this.setState({ isLoading: false, isAuthenticated, user });\r\n    };\r\n    \r\n    handleRedirectCallback = async () => {\r\n        this.setState({ isLoading: true });\r\n\r\n        await this.state.auth0Client.handleRedirectCallback();\r\n        const user = await this.state.auth0Client.getUser();\r\n\r\n        this.setState({ user, isAuthenticated: true, isLoading: false });\r\n        window.history.replaceState({}, document.title, window.location.pathname);\r\n    };\r\n\r\n    render() {\r\n        const { auth0Client, isLoading, isAuthenticated, user } = this.state;\r\n        const { children } = this.props;\r\n\r\n        const configObject = {\r\n            isLoading,\r\n            isAuthenticated,\r\n            user,\r\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n            logout: (...p) => auth0Client.logout(...p)\r\n        };\r\n\r\n        return (\r\n            <Auth0Context.Provider value={configObject}>\r\n                <App />\r\n            </Auth0Context.Provider>\r\n        );\r\n    }\r\n}","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faPowerOff);\n}\n\nexport default initFontAwesome;\n","import React, { Component, useContext } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"./components/Loading\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./views/Home\";\nimport Profile from \"./views/Profile\";\nimport FileUpload from \"./views/ExternalApi\";\nimport history from \"./utils/history\";\nimport { Auth0Context } from \"./components/Auth0Provider\";\n\n// styles\nimport \"./App.css\";\n\n// fontawesome\nimport initFontAwesome from \"./utils/initFontAwesome\";\nimport { faGrinTongueSquint } from \"@fortawesome/free-solid-svg-icons\";\ninitFontAwesome();\n\nconst App = () => {\n/*   constructor(props) {\n    super(props);\n    this.state = {\n      auth: null,\n      isLoading: false,\n      isAuthenticated:false\n    }\n  }\n */\nconst { user, isLoading } = useAuth0();\n\n/*   const componentWillMount = () => {\n    this.auth = new Auth0Client({\n      domain: 'aerovate.auth0.com',\n      client_id: 'E3vnWzy4O0gcrM1seDpU7r2glcHE44G4',\n      useRefreshTokens: true\n    }); */\n    console.log(\"displaying auth\");\n    console.log(user);\n/*     if (window.location.search.includes('code=')) {\n      this.handleRedirectCallback();\n    } */\n/*   } */\n\n/*   async handleRedirectCallback() {\n    this.state.isLoading = true;\n    await this.auth.handleRedirectCallback();\n    this.state.isloading = false;\n    this.state.isAuthenticated = true;\n    console.log(\"done\");\n    window.history.replaceState({}, document.title, window.location.pathname);\n  } */\n\n/*     if (auth0.error) {\n      return <div>Oops... {this.auth.error.message}</div>;\n    } */\n\n  if (isLoading) {\n    return <Loading />;\n  };\n\n  return (\n  /*   <Router history={history}> */\n      <div id=\"app\" className=\"d-flex flex-column h-100\">\n{/*         <NavBar /> */}\n        <Container className=\"flex-grow-1 mt-5\">\n{/*           <AnimatedCursor\n                  innerSize={8}\n                  outerSize={8}\n                  color='225, 90, 90'\n                  outerAlpha = {0.4}\n              /> */}\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/tester\" component={FileUpload} />\n          </Switch>\n        </Container>\n        <Footer />\n      </div>\n/*     </Router> */\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport configs from \"./configs\";\r\n\r\n  const Auth0ProviderWithHistory = ({ children }) => {\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n/*   const uri = window.location.origin == \"https://dkarnani.github.io\" ? \"https://dkarnani.github.io/aerovate/\" : window.location.origin; */\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain = {configs.DOMAIN}\r\n      clientId= {configs.clientID}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;","const IsDevice = (() => {\r\n    if (typeof navigator == 'undefined') return\r\n  \r\n    let ua = navigator.userAgent\r\n  \r\n    return {\r\n      info: ua,\r\n  \r\n      Android() {\r\n        return ua.match(/Android/i)\r\n      },\r\n      BlackBerry() {\r\n        return ua.match(/BlackBerry/i)\r\n      },\r\n      IEMobile() {\r\n        return ua.match(/IEMobile/i)\r\n      },\r\n      iOS() {\r\n        return ua.match(/iPhone|iPad|iPod/i)\r\n      },\r\n      OperaMini() {\r\n        return ua.match(/Opera Mini/i)\r\n      },\r\n  \r\n      any() {\r\n        return (\r\n          IsDevice.Android() ||\r\n          IsDevice.BlackBerry() ||\r\n          IsDevice.iOS() ||\r\n          IsDevice.OperaMini() ||\r\n          IsDevice.IEMobile()\r\n        )\r\n      }\r\n    }\r\n  })()\r\n  \r\n  export default IsDevice","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth0-provider-with-history\";\nimport AnimatedCursor from \"./components/animatedCursor\"\nimport NavBar from \"./components/NavBar\";\n\n/* const onRedirectCallback = (appState) => {\n  history.push(\n    appState && appState.returnTo\n      ? appState.returnTo\n      : window.location.pathname\n  );\n}; */\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <NavBar />\n      <App />\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","module.exports = __webpack_public_path__ + \"static/media/NewLogo.c521dd9f.png\";"],"sourceRoot":""}